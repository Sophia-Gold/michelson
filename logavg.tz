parameter (list (pair nat nat));
storage nat;
code {
       UNPAIR;
       SWAP;
       DROP;
       DUP;
       MAP
         {
           UNPAIR;

           # compute log2 using http://www.claysturner.com/dsp/BinaryLogarithm.pdf
           LAMBDA nat int
                  {
                    DUP;
                    PUSH nat 0;
                    IFCMPEQ { FAIL; }
                            {
                              DIP {
                                    PUSH nat 32768;
                                    PUSH int 0;
                                  };

                              # normalize > 1
                              PUSH bool True;
                              LOOP
                                {
                                  DUP;
                                  PUSH nat 65536;
                                  SWAP;
                                  IFCMPLT {
                                            PUSH nat 1;
                                            SWAP;
                                            LSL;
                                            # sub 1 from characteristic
                                            DIP 2 { PUSH int 65536; };
                                            DIP { SUB; };
                                            PUSH bool True;
                                          }
                                          {
                                            PUSH bool False;
                                          };
                                };

                              # normalize <= 2
                              PUSH bool True;
                              LOOP
                                {
                                  DUP;
                                  PUSH nat 131073; # 2*2^16 + 1
                                  SWAP;
                                  IFCMPGT {
                                            PUSH nat 1;
                                            SWAP;
                                            LSR;
                                            DIP {
                                                  # add 1 to characteristic
                                                  PUSH int 65536;
                                                  ADD;
                                                };
                                            PUSH bool True;
                                          }
                                          {
                                            PUSH bool False;
                                          };
                                };

                              # calculate mantissa by looping through bits
                              PUSH nat 0;
                              PUSH bool True;
                              LOOP
                                {
                                  DUP;
                                  PUSH nat 16;
                                  SWAP;
                                  IFCMPLT {
                                            PUSH nat 1;
                                            ADD;
                                            DIP
                                              {
                                                DUP;
                                                MUL;
                                                PUSH nat 16;
                                                SWAP;
                                                LSR;
                                                DUP;
                                                PUSH nat 131073;
                                                SWAP;
                                                IFCMPGT {
                                                          PUSH nat 1;
                                                          SWAP;
                                                          LSR;
                                                          DIP {
                                                                # add mantissa to characteristic
                                                                DIP { DUP; };
                                                                ADD;
                                                              };
                                                        }
                                                        {
                                                        };

                                                DIP 2
                                                    {
                                                      # mantissa >> 1
                                                      PUSH nat 1;
                                                      SWAP;
                                                      LSR;
                                                    };
                                              };
                                            PUSH bool True;
                                          }
                                          {
                                            PUSH bool False;
                                          };
                                };
                              DROP;
                              DROP;
                              SWAP;
                              DROP;
                            };
                  };
           SWAP;
           EXEC;
           # mul by weight
           MUL;
         };
       PUSH int 0;
       SWAP;
       ITER { ADD; };

       # sum weights
       DIP
         {
           MAP
             {
               UNPAIR;
               DROP;
             };
           PUSH nat 0;
           SWAP;
           ITER { ADD; };
         };

       # normalize weight
       EDIV;
       ASSERT_SOME;
       # round down
       UNPAIR;
       SWAP;
       DROP;

       # raise to 2nd power
       LAMBDA int nat
              {
                DUP;
                PUSH int 0;
                IFCMPEQ
                  {
                    DROP;
                    PUSH nat 65536;
                  }
                  {
                    LAMBDA nat nat
                           {
                             # separate int and frac
                             PUSH nat 65536;
                             SWAP;
                             EDIV;
                             ASSERT_SOME;
                             UNPAIR;

                             # compute int part
                             LAMBDA nat nat
                                    {
                                      PUSH nat 256;
                                      SWAP;
                                      EDIV;
                                      ASSERT_SOME;
                                      UNPAIR;
                                      INT;
                                      DIP { PUSH nat 65536 };
                                      PUSH bool True;
                                      LOOP
                                        {
                                          DUP;
                                          PUSH int 0;
                                          IFCMPEQ { PUSH bool False; }
                                                  {
                                                    PUSH nat 1;
                                                    SWAP;
                                                    SUB;
                                                    DIP {
                                                          PUSH nat 256;
                                                          SWAP;
                                                          LSL;
                                                        };
                                                    PUSH bool True;
                                                  };
                                        };
                                      DROP;
                                      LSL;
                                    };
                             SWAP;
                             EXEC;
                             SWAP;
                             DUP;
                             PUSH nat 0;
                             IFCMPEQ
                               { DROP; }
                               {
                                 # compute frac part with 8th degree chebyshev
                                 # coeffs from GP/PARI: `polchebyshev(1, 1, 2^x)`

                                 # add 16 bits of precision
                                 PUSH nat 16;
                                 SWAP;
                                 LSL;

                                 DUP;
                                 DUP;
                                 DUP;
                                 DUP;
                                 DUP;
                                 DUP;
                                 DUP;
                                 PUSH nat 5676;

                                 MUL;
                                 PUSH nat 32;
                                 SWAP;
                                 LSR;
                                 PUSH nat 65510;
                                 ADD;

                                 MUL;
                                 PUSH nat 32;
                                 SWAP;
                                 LSR;
                                 PUSH nat 661577;
                                 ADD;

                                 MUL;
                                 PUSH nat 32;
                                 SWAP;
                                 LSR;
                                 PUSH nat 5726720;
                                 ADD;

                                 MUL;
                                 PUSH nat 32;
                                 SWAP;
                                 LSR;
                                 PUSH nat 41309550;
                                 ADD;

                                 MUL;
                                 PUSH nat 32;
                                 SWAP;
                                 LSR;
                                 PUSH nat 238388332;
                                 ADD;

                                 MUL;
                                 PUSH nat 32;
                                 SWAP;
                                 LSR;
                                 PUSH nat 1031764991;
                                 ADD;

                                 MUL;
                                 PUSH nat 32;
                                 SWAP;
                                 LSR;
                                 PUSH nat 2977044472;
                                 ADD;

                                 MUL;
                                 PUSH nat 32;
                                 SWAP;
                                 LSR;
                                 PUSH nat 4294967296;
                                 ADD;

                                 # 2^int * 2^frac
                                 MUL;
                                 PUSH nat 32;
                                 SWAP;
                                 LSR;
                               };
                           };
                    SWAP;

                    DUP;
                    PUSH int 0;
                    SWAP;
                    IFCMPGT { ABS;
                              EXEC;
                            }
                            {
                              ABS;
                              EXEC;
                              PUSH nat 4294967296;
                              EDIV;
                              ASSERT_SOME;
                              UNPAIR;
                              SWAP;
                              DROP;
                            };
                  };
              };
       SWAP;
       EXEC;
       NIL operation; PAIR;
     };